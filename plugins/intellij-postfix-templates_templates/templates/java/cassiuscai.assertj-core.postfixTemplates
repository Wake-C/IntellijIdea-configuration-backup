## Templates for assertj ##
.assertThat : assertj-core assertThat
    io.vavr.Lazy                    →  [SKIP]
    io.vavr.control.Either          →  [SKIP]
    io.vavr.control.Validation      →  [SKIP]
    io.vavr.control.Option          →  [SKIP]
    io.vavr.control.Try             →  [SKIP]
    io.vavr.collection.Seq          →  [SKIP]
    io.vavr.collection.Map          →  [SKIP]
    ANY               [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$)

.assertCall : assertj-core assertCall
    ANY               [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThatCode(() -> $expr$)

.assertEqualTo : assertj-core assertEqualTo
    ANY               [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isEqualTo($other$)$END$

.assertNull : assertj-core assertNull
    ANY               [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isNull()

.assertNotNull : assertj-core assertNotNull
    ANY               [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isNotNull()

.assertBlank : assertj-core assertBlank
    java.lang.String  [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isBlank()

.assertNotBlank : assertj-core assertNotBlank
    java.lang.String  [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isNotBlank()

.assertTrue : assertj-core assertTrue
    BOOLEAN           [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isTrue()

.assertFalse : assertj-core assertFalse
    BOOLEAN           [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isFalse()

.assertEmpty : assertj-core assertEmpty
    ARRAY               [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isEmpty()
    java.util.Map       [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isEmpty()
    java.lang.Iterable  [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isEmpty()

.assertNotEmpty : assertj-core assertNotEmpty
    ARRAY               [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isNotEmpty()
    java.util.Map       [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isNotEmpty()
    java.lang.Iterable  [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThat($expr$).isNotEmpty()

.assertThrowException : assertj-core assertThrowException
    ANY                 [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThatThrownBy(() -> $expr$)

.assertNotThrowException : assertj-core assertNotThrowException
    ANY                 [org.assertj.core.api.Assertions]     →  org.assertj.core.api.Assertions.assertThatCode(() -> $expr$).doesNotThrowAnyException()

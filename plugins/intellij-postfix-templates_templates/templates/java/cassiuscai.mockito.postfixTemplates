# Mockito postfix templates
# create mock instance
.mock : mockito mock
    java.lang.Class     [org.mockito.Mockito]       →  org.mockito.Mockito.mock($expr$)  [USE_STATIC_IMPORTS]
.mockWithName : mockito mockWithName
    java.lang.Class     [org.mockito.Mockito]       →  org.mockito.Mockito.mock($expr$, $name$)  [USE_STATIC_IMPORTS]
.mockWithAnswer : mockito mockWithAnswer
    java.lang.Class     [org.mockito.Mockito]       →  org.mockito.Mockito.mock($expr$, (org.mockito.stubbing.Answer<$answerType$>) invocation -> $answerBody$)   [USE_STATIC_IMPORTS]

# create spy instance
.spy : mockito spy
    java.lang.Object    [org.mockito.Mockito]       →  org.mockito.Mockito.spy($expr$)   [USE_STATIC_IMPORTS]

# mockito stubing operations
.when : mockito when
    NON_VOID            [org.mockito.Mockito]       →  org.mockito.Mockito.when($expr$)  [USE_STATIC_IMPORTS]
.verify : mockito verify
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.verify($expr$)    [USE_STATIC_IMPORTS]
.verifyWithMode : mockito verifyWithMode
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.verify($expr$,$mode$) [USE_STATIC_IMPORTS]
.reset : mockito reset
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.reset($expr$); [USE_STATIC_IMPORTS]
.clearInvocations : mockito clearInvocations
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.clearInvocations($expr$);  [USE_STATIC_IMPORTS]
.doThrow : mockito doThrow
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.doThrow($throwable$).when($expr$).$END$   [USE_STATIC_IMPORTS]
.doNothing : mockito doNothing
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.doNothing().when($expr$).$END$    [USE_STATIC_IMPORTS]
.doAnswer : mockito doAnswer
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.doAnswer((org.mockito.stubbing.Answer<$answerType$>) invocation -> $answerBody$).when($expr$).$END$    [USE_STATIC_IMPORTS]
.doReturn : mockito doReturn
    ANY                 [org.mockito.Mockito]       →  org.mockito.Mockito.doReturn($returnValue$).when($expr$).$END$    [USE_STATIC_IMPORTS]

.initMockito : mockito initMockito
    ANY                 [org.mockito.Mockito]       →  org.mockito.MockitoAnnotations.initMocks($expr$);

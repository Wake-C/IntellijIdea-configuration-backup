{"id":179914,"xmlId":"ink.organics.pojo2json","name":"POJO to JSON","description":"<h1>POJO to JSON</h1>\n\n<p>A simple plugin for converting POJO to JSON in IntelliJ IDEA</p>\n\n<ul><li>Support BigDecimal and other Numeric objects.</li><li>Support Java8 time type.</li><li>Support Enum.</li><li>Partial support Jackson and Fastjson annotations.</li><li>Support Java14 Records <a href=\"https://openjdk.java.net/jeps/359\">JEP-359</a></li><li>Support conversion<ul><li>Inner Class</li><li>Global Variable</li><li>Local Variable</li><li>Constructor Parameter</li><li>Method Parameter</li></ul></li></ul>\n\n<h2>Support JVM platform languages</h2>\n\n<ul><li>Java - full support</li><li>Kotlin - beta, but full support</li></ul>\n\n<h2>Usage</h2>\n\n<ul><li><p>Note that the position of the cursor can affect the result!</p></li><li><p>Open class file &gt; Move cursor to Class/Variable/Parameter &gt; Right click &gt; Copy/Paste Special &gt; Copy JSON &gt; JSON result will copy to clipboard\n<img src=\"https://raw.githubusercontent.com/organics2016/pojo2json/master/screenshot/file_single.gif\" alt=\"Image text\"></p></li><li><p>Project view select a class file &gt; Right click &gt; Copy JSON &gt; JSON result will copy to clipboard\n<img src=\"https://raw.githubusercontent.com/organics2016/pojo2json/master/screenshot/list_single.gif\" alt=\"Image text\"></p></li><li><p>Project view select multiple files &gt; Right click &gt; Copy JSON &gt; JSON result will generate to files in the Scratches folder\n<img src=\"https://raw.githubusercontent.com/organics2016/pojo2json/master/screenshot/batch.gif\" alt=\"Image text\"></p></li></ul>\n\n<h2>Installation</h2>\n\n<ul><li><p><strong>Install in IDEA:</strong></p><ul><li>Preferences(Settings) &gt; Plugins &gt; Marketplace &gt; Search<b>\"POJO to JSON\"</b> &gt; Install</li></ul></li><li><p><strong>Manual Install:</strong></p><ul><li>[plugin] -&gt; Preferences(Settings) &gt; Plugins &gt; ⚙️ &gt; Install plugin from disk... -&gt; Select the plug-in package and install（No need to unzip）</li></ul></li></ul>\n    \n<h2>Q&amp;A</h2>\n\n<ul><li>Why always report errors when use it?</li></ul>\n<pre><code>This class reference level exceeds maximum limit or has nested references!\n</code></pre>\n<p>When the program throws this warning there are only two possibilities.</p>\n\n<ol><li>This class or parent class has nested references</li></ol>\n\n<p>eg:</p>\n<pre><code>public class A {\n    private B b;\n\n    public class B {\n        private A a;\n    }\n}\n</code></pre>\n<pre><code>{\n \"b\":{\n  \"a\":{\n   \"b\":{\n     \"a\":{\n        ......\n      }\n    }\n   }\n }\n}\n</code></pre>\n<p>or</p>\n<pre><code>public class A {\n    private A a;\n}\n</code></pre>\n<pre><code>{\n \"a\":{\n  \"a\":{\n   \"a\":{\n     \"a\":{\n        ......\n      }\n    }\n   }\n }\n}\n</code></pre>\n\n<ol start=\"2\"><li>This class reference level &gt; 500 </li></ol>\n\n<p>eg:</p>\n<pre><code>public class A {\n    private B _0;\n    public class B {\n        private C _1;\n        public class C {\n            private D _2;\n            public class D {\n                // _3 ..... _501..\n            }\n        }\n    }\n}\n</code></pre>\n<pre><code>{\n  \"_0\": {\n    \"_1\": {\n      \"_2\": {\n        \"......_501\":{}\n      }\n    }\n  }\n}\n</code></pre>\n<p>Perhaps both will happen for entity but this entity are not suitable for JSON.<br>\nSo you can try to serialize your POJO using Jackson to see what happens.<br>\nIf no exception, you can submit a bug to this repository issues with your target class :)</p>\n\n<ul><li>But how to solve this problem?</li></ul>\n\n<p>You can try the following methods.</p>\n\n<h2>Support Annotations and Javadoc</h2>\n\n<h3>@JsonProperty and @JSONField</h3>\n\n<pre><code>import com.alibaba.fastjson.annotation.JSONField;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\npublic class User {\n\n    @JsonProperty(\"name\")\n    private String username;\n    \n    @JSONField(name = \"pass\")\n    private String password;\n}\n</code></pre>\n<p>paste result:</p>\n<pre><code>{\n  \"name\": \"\",\n  \"pass\": \"\"\n}\n</code></pre>\n\n<h3>@JsonIgnore or Javadoc tags JsonIgnore</h3>\n\n<pre><code>import com.fasterxml.jackson.annotation.JsonIgnore;\n\npublic class User {\n    \n    @JsonIgnore\n    private String username;\n    private String password;\n}\n</code></pre>\n<p>or when there is no jackson library</p>\n<pre><code>public class JsonIgnoreDocTestPOJO {\n\n  /**\n   * @JsonIgnore\n   */\n  private String username;\n  private String password;\n}\n</code></pre>\n\n<p>paste result:</p>\n<pre><code>{\n  \"password\": \"\"\n}\n</code></pre>\n\n<h3>@JsonIgnoreProperties or Javadoc tags JsonIgnoreProperties</h3>\n\n<pre><code>import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n\nimport java.util.List;\n\npublic class User {\n\n    private String username;\n    @JsonIgnoreProperties({\"users\", \"aaa\", \"bbb\"})\n    private List&lt;Role&gt; roles;\n\n    public class Role {\n\n        private String roleName;\n        private List&lt;User&gt; users;\n    }\n}\n</code></pre>\n<p>or when there is no jackson library</p>\n<pre><code>import java.util.List;\n\npublic class User {\n\n    private String username;\n    /**\n     * @JsonIgnoreProperties users, aaa, bbb\n     */\n    private List&lt;Role&gt; roles;\n\n    public class Role {\n\n        private String roleName;\n        private List&lt;User&gt; users;\n    }\n}\n</code></pre>\n<p>paste result:</p>\n<pre><code>{\n  \"username\": \"\",\n  \"roles\": [\n    {\n      \"roleName\": \"\"\n    }\n  ]\n}\n</code></pre>\n\n<p>You may encounter this problem during use.</p>\n<pre><code>This class reference level exceeds maximum limit or has nested references!\n</code></pre>\n<p>The above method can solve the nested reference problem well.</p>\n\n<h3>@JsonIgnoreType</h3>\n\n<pre><code>import com.fasterxml.jackson.annotation.JsonIgnoreType;\n\nimport java.util.List;\n\npublic class User {\n\n    private String username;\n    private List&lt;Role&gt; roles;\n\n    @JsonIgnoreType\n    public class Role {\n        private String roleName;\n        private List&lt;User&gt; users;\n    }\n}\n</code></pre>\n<p>paste result:</p>\n<pre><code>{\n  \"username\": \"\",\n  \"roles\": []\n}\n</code></pre>","tags":["Code Tools"],"vendor":"organics2016","version":"1.2.2","notes":"<h3>Changed</h3>\n<ul><li>Optimize menu operation.</li></ul>","dependencies":["com.intellij.modules.platform","com.intellij.modules.lang","com.intellij.java"],"since":"203.0","sourceCodeUrl":"https://github.com/organics2016/pojo2json.git","size":36947}